// given node n, find successor s

// right child exists
        13
   10       14 (n)
 9    11       15
            14 (s)  16



object/assciative array for each node (n): key, parent, left child, right child

function Node (value){
   n.value = value;
   n.right =
   n.left =
   n.parent =
}
        12
   11        13 (n.parent)
 9    14  12 (n)

function getSuccessorOfBST(node)
   {
      if(node==null){
         return ;
      }
      if(node.right!=null ){
         _inorderSuccessor(node.right,node.right.value);
      }
      if(node.parent!==null && node.right==null){
          return node.parent;
      }

   }

   function _inorderSuccessor(node,max){
      if(max>node.value){
         max = node.value;
      }
      if(node.left!==null){
         _inorderSuccessor(node)
      }

   }
