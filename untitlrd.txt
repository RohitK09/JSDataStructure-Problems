/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
 // does not print in the right order
var verticalOrder = function(root) {
    let m = new Map();
    let minMax =[0,0];
    _findDistaceFromRoot(root,m,0,minMax);
    let result = new Array();
    for(var i = minMax[1]; i<= minMax[0]; i++){
       result.push(m.get(i));
    }
    return result;
};
let _findDistaceFromRoot  = function _findDistaceFromRoot(node,m,hd,minMax)
    {
        if(node===null){
            return ;
        }
        if(hd > minMax[0]){
           minMax[0] = hd;
        }
        if( hd<minMax[1]){
           minMax[1] = hd;
        }
        if(m.has(hd)){
            let val = m.get(hd);
            console.log(val)
            val.push(node.val);

            m.set(hd,val);
        }else{
            let val = [node.val];
            m.set(hd,val);
        }

        _findDistaceFromRoot(node.right,m,hd+1,minMax);
          _findDistaceFromRoot(node.left,m,hd-1,minMax);

    }
